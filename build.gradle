buildscript {
	repositories {
		maven { url 'https://repo.spring.io/milestone' }
		gradlePluginPortal()
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
	id 'org.sonarqube' version "${sonarqubePluginVersion}"
	id 'io.spring.nohttp' version "${noHttpCheckstyleVersion}"
}

group = 'com.github.viktornar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework:spring-web'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

checkstyle {
	toolVersion "${checkstyleVersion}"
	configFile file("checkstyle.xml")
	checkstyleTest.enabled = false
}

jacocoTestReport {
	String jacocoTestTasksString = project.hasProperty('jacocoTaskDependsOn') ?
			project.getProperty('jacocoTaskDependsOn') : 'test'
	List jacocoTestTasks = jacocoTestTasksString.split(',')
	def jacocoTestFiles = []
	jacocoTestTasks.each { String taskName ->
		def task = project.tasks.findByName(taskName)
		if (task) {
			jacocoTestFiles.add("${project.buildDir}/jacoco/${taskName}.exec")
			dependsOn(task)
		}
	}
	classDirectories.from(file("${project.buildDir}/classes/java/main"))
	executionData.setFrom files(jacocoTestFiles)
	reports.xml.required = true
}

file("sonar-project.properties").withReader {
	Properties sonarProperties = new Properties()
	sonarProperties.load(it)

	sonarProperties.each { key, value ->
		sonarqube {
			properties {
				property key, value
			}
		}
	}
}